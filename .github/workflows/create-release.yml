name: Create Release with Changelog

on:
  push:
    branches:
      - '*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git fetch --tags

      - name: Get the latest tag and current commit hash
        id: tags
        run: |
          # Get the latest tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "Previous tag: $PREVIOUS_TAG"

          # Get the current commit hash
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "Current commit: $CURRENT_COMMIT"

          # Define the new tag (e.g., vYYYY.MM.DD.HHMMSS)
          NEW_TAG="v$(date -u +'%Y.%m.%d.%H%M%S')"
          echo "New tag: $NEW_TAG"

          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_ENV
          echo "current_commit=$CURRENT_COMMIT" >> $GITHUB_ENV
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        run: |
          PREVIOUS_TAG=${{ env.previous_tag }}
          NEW_TAG=${{ env.new_tag }}

          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found, generating changelog from the beginning."
            COMMITS=$(git log --pretty=format:"%H|%s|%an")
          else
            echo "Generating changelog from $PREVIOUS_TAG to $NEW_TAG."
            COMMITS=$(git log --pretty=format:"%H|%s|%an" "$PREVIOUS_TAG..HEAD")
          fi

          changelog="### What's Changed\n"

          if [ -z "$COMMITS" ]; then
            changelog+="No changes since the last release.\n"
          else
            while IFS= read -r commit; do
              hash=$(echo "$commit" | cut -d'|' -f1)
              message=$(echo "$commit" | cut -d'|' -f2)
              author=$(echo "$commit" | cut -d'|' -f3)

              if [[ "$message" =~ ^(feat|fix|style|docs|chore)\(([^)]+)\):\ (.+) ]]; then
                type=${BASH_REMATCH[1]}
                scope=${BASH_REMATCH[2]}
                description=${BASH_REMATCH[3]}
                changelog+="- **$type($scope)**: [$description](https://github.com/$GITHUB_REPOSITORY/commit/$hash) by @$author\n"
              else
                changelog+="- $message: [Details](https://github.com/$GITHUB_REPOSITORY/commit/$hash) by @$author\n"
              fi
            done <<< "$COMMITS"
          fi

          echo "::set-output name=changelog::$changelog"
        shell: bash

      - name: Create New Tag
        run: |
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_TAG=${{ env.new_tag }}
          CHANGELOG="${{ steps.changelog.outputs.changelog }}"
          
          gh release create "$NEW_TAG" \
              --title "Release $NEW_TAG" \
              --notes "$CHANGELOG"