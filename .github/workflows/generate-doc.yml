#name: Generate Commit Log
#
## on:
##  push:
##    branches:
##      - '*'  # Trigger on all branches
#
#on:
#  push:
#    tags:
#      - 'v*'  # Only triggers on tags starting with 'v'
#
#jobs:
#  generate-commit-log:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the repository
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0  # Fetch all history for all tags and branches
#
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.x'
#
#      - name: Install dependencies
#        run: |
#          pip install requests
#          pip install GitPython
#          pip install PyGithub
#
#      - name: Create the generated_docs directory
#        run: mkdir -p generated_docs
#
#      - name: Run the commit log generation script
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          REPO_OWNER: ${{ github.repository_owner }}
#          REPO_NAME: ${{ github.event.repository.name }}
#          TAG_NAME: ${{ github.ref_name }}  # Get the tag name that triggered the workflow
#        run: python .github/scripts/changelogs/main.py
#
#      - name: Check the generated commit logs
#        run: |
#          echo "Checking generated_docs directory contents:"
#          ls -la generated_docs
#
#      - name: Upload all commit logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: commit-logs
#          path: generated_docs/*
#
#      # Step 2: Download the artifact from the previous workflow
#      - name: Download commit logs artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: commit-logs
#          path: ./generated_docs
#
#      # Step 3: Send the email
#      - name: Send email
#        uses: dawidd6/action-send-mail@v4
#        with:
#          server_address: smtp.gmail.com
#          server_port: 465
#          secure: true
#          username: ${{ secrets.MAIL_USERNAME }}
#          password: ${{ secrets.MAIL_PASSWORD }}
#          from: GitHub Actions <no-reply@github.com>
#          to: abdelghaniyacine.barka@outlook.com
#          cc: mohamed.berhab@datamasterai.com,abdellah.bouchareb@datamasterai.com
#          subject: GitHub Actions Notification
#          html_body: file://.github/scripts/email_template.html
#          attachments: ./generated_docs/*
#



name: Generate Commit Log

#on:
#  push:
#    branches:
#      - '*'  # Trigger on all branches

on:
  push:
    tags:
      - 'v*'  # Only triggers on tags starting with 'v'

jobs:
  generate-commit-log:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests
          pip install GitPython
          pip install PyGithub

      - name: Create the generated_docs directory
        run: mkdir -p generated_docs

      - name: Run the commit log generation script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          TAG_NAME: ${{ github.ref_name }}
        run: python .github/scripts/changelogs/main.py

      - name: Check the generated commit logs
        run: |
          echo "Checking generated_docs directory contents:"
          ls -la generated_docs

      - name: Convert Markdown to PDF
        uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_path: generated_docs
          output_dir: generated_docs/pdf_docs
          build_html: false

      - name: Upload PDFs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: commit-log-pdfs
          path: generated_docs/*

#      - name: Set directory permissions
#        run: chmod -R 777 pdf_docs/*

      - name: Ensure directory exists
        run: mkdir -p pdf_docs

      - name: Download PDFs for email
        uses: actions/download-artifact@v3
        with:
          name: commit-log-pdfs
          path: pdf_docs

      - name: Generate dynamic email template
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_ACTOR: ${{ github.actor }}
          TAG_NAME: ${{ github.ref_name }}
        run: python .github/scripts/automatic_email/main.py

      - name: Send email
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          from: GitHub Actions <no-reply@github.com>
          to: abdelghaniyacine.barka@outlook.com
#          cc: mohamed.berhab@datamasterai.com,abdellah.bouchareb@datamasterai.com
          subject: GitHub Actions Notification
          html_body: file://.github/scripts/automatic_email/email_output.html
          attachments: generated_docs/pdf_docs/*